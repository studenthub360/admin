{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AdminNetworkingGroupsPage=()=>{const[groups,setGroups]=useState([]);const[newGroup,setNewGroup]=useState({groupName:\"\",groupLink:\"\",description:\"\",image:null});useEffect(()=>{// Fetch networking groups data when the component mounts\nfetchNetworkingGroups();},[]);const fetchNetworkingGroups=async()=>{try{const token=sessionStorage.getItem(\"accessToken\");// Fetch networking groups data from the API\nconst response=await fetch(\"https://student360-api.onrender.com/api/netgrp\",{headers:{Authorization:\"\".concat(token)}});if(!response.ok){throw new Error(\"Failed to fetch networking groups\");}const groupsData=await response.json([]);setGroups(groupsData||[]);// Ensure groups array is defined or use an empty array\n}catch(error){console.error(\"Error fetching networking groups:\",error);alert(\"Failed to fetch networking groups. Please try again.\");}};const handleInputChange=e=>{const{name,value,files}=e.target;// If the input is a file (image), set the image property in the state\nif(name===\"image\"){setNewGroup(prevGroup=>({...prevGroup,[name]:files[0]// Store the File object directly\n}));}else{setNewGroup(prevGroup=>({...prevGroup,[name]:value}));}};const handleAddGroup=async()=>{try{const token=sessionStorage.getItem(\"accessToken\");// Create a FormData object to handle the file upload\nconst formData=new FormData();formData.append(\"groupName\",newGroup.groupName);formData.append(\"groupLink\",newGroup.groupLink);formData.append(\"description\",newGroup.description);formData.append(\"image\",newGroup.image);// Append the File object\n// Send a POST request to add a new networking group\nconst response=await fetch(\"https://student360-api.onrender.com/api/netgrp\",{method:\"POST\",headers:{Authorization:\"\".concat(token)},body:formData});if(!response.ok){throw new Error(\"Failed to add networking group\");}// Fetch the updated list of networking groups\nfetchNetworkingGroups();}catch(error){console.error(\"Error adding networking group:\",error);alert(\"Failed to add networking group. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto mt-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-8 text-[#3B50FE]\",children:\"Admin Networking Groups Page\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\" space-x-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"groupName\",placeholder:\"Group Name\",value:newGroup.groupName,onChange:handleInputChange,className:\"p-2 border rounded-md w-1/4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"groupLink\",placeholder:\"Group Link\",value:newGroup.groupLink,onChange:handleInputChange,className:\"p-2 border rounded-md w-1/4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"description\",placeholder:\"Group Description\",value:newGroup.description,onChange:handleInputChange,className:\"p-2 border rounded-md w-1/4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",accept:\"image/*\",placeholder:\"Image URL\",onChange:handleInputChange,className:\"p-2 border rounded-md w-1/4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddGroup,className:\"bg-[#3B50FE] text-white px-4 py-2 rounded-md\",children:\"Add Group\"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Networking Groups List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\",children:groups.map((group,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white pb-6  text-center rounded-xl shadow-md\",children:[/*#__PURE__*/_jsx(\"img\",{src:group.imageUrl,alt:\"Event\",className:\"w-full h-fit object-cover\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Group Name:\"}),\" \",group.groupName,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Group Link:\"}),\" \",group.groupLink,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",group.groupDescription,/*#__PURE__*/_jsx(\"br\",{})]},index))})]})]});};export default AdminNetworkingGroupsPage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminNetworkingGroupsPage","groups","setGroups","newGroup","setNewGroup","groupName","groupLink","description","image","fetchNetworkingGroups","token","sessionStorage","getItem","response","fetch","headers","Authorization","concat","ok","Error","groupsData","json","error","console","alert","handleInputChange","e","name","value","files","target","prevGroup","handleAddGroup","formData","FormData","append","method","body","className","children","type","placeholder","onChange","accept","onClick","map","group","index","src","imageUrl","alt","groupDescription"],"sources":["/Users/mac/Documents/Coding/admin-studenthub360/src/Component/Admin/NetworkingGroup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AdminNetworkingGroupsPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [newGroup, setNewGroup] = useState({\n    groupName: \"\",\n    groupLink: \"\",\n    description: \"\",\n    image: null,\n  });\n\n  useEffect(() => {\n    // Fetch networking groups data when the component mounts\n    fetchNetworkingGroups();\n  }, []);\n\n  const fetchNetworkingGroups = async () => {\n    try {\n      const token = sessionStorage.getItem(\"accessToken\");\n\n      // Fetch networking groups data from the API\n      const response = await fetch(\n        \"https://student360-api.onrender.com/api/netgrp\",\n        {\n          headers: {\n            Authorization: `${token}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch networking groups\");\n      }\n\n      const groupsData = await response.json([]);\n      setGroups(groupsData || []); // Ensure groups array is defined or use an empty array\n    } catch (error) {\n      console.error(\"Error fetching networking groups:\", error);\n      alert(\"Failed to fetch networking groups. Please try again.\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, files } = e.target;\n\n    // If the input is a file (image), set the image property in the state\n    if (name === \"image\") {\n      setNewGroup((prevGroup) => ({\n        ...prevGroup,\n        [name]: files[0], // Store the File object directly\n      }));\n    } else {\n      setNewGroup((prevGroup) => ({\n        ...prevGroup,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleAddGroup = async () => {\n    try {\n      const token = sessionStorage.getItem(\"accessToken\");\n\n      // Create a FormData object to handle the file upload\n      const formData = new FormData();\n      formData.append(\"groupName\", newGroup.groupName);\n      formData.append(\"groupLink\", newGroup.groupLink);\n      formData.append(\"description\", newGroup.description);\n      formData.append(\"image\", newGroup.image); // Append the File object\n\n      // Send a POST request to add a new networking group\n      const response = await fetch(\n        \"https://student360-api.onrender.com/api/netgrp\",\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `${token}`,\n          },\n          body: formData,\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add networking group\");\n      }\n\n      // Fetch the updated list of networking groups\n      fetchNetworkingGroups();\n    } catch (error) {\n      console.error(\"Error adding networking group:\", error);\n      alert(\"Failed to add networking group. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto mt-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-[#3B50FE]\">\n        Admin Networking Groups Page\n      </h1>\n\n      <div className=\"mb-6\">\n        {/* <h2 className=\"text-xl font-bold mb-4\">Add New Networking Group</h2> */}\n        <div className=\" space-x-4\">\n          <input\n            type=\"text\"\n            name=\"groupName\"\n            placeholder=\"Group Name\"\n            value={newGroup.groupName}\n            onChange={handleInputChange}\n            className=\"p-2 border rounded-md w-1/4\"\n          />\n          <input\n            type=\"text\"\n            name=\"groupLink\"\n            placeholder=\"Group Link\"\n            value={newGroup.groupLink}\n            onChange={handleInputChange}\n            className=\"p-2 border rounded-md w-1/4\"\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Group Description\"\n            value={newGroup.description}\n            onChange={handleInputChange}\n            className=\"p-2 border rounded-md w-1/4\"\n          />\n          <input\n            type=\"file\"\n            name=\"image\"\n            accept=\"image/*\"\n            placeholder=\"Image URL\"\n            onChange={handleInputChange}\n            className=\"p-2 border rounded-md w-1/4\"\n          />\n          <button\n            onClick={handleAddGroup}\n            className=\"bg-[#3B50FE] text-white px-4 py-2 rounded-md\"\n          >\n            Add Group\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-xl font-bold mb-4\">Networking Groups List</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {groups.map((group, index) => (\n            <div key={index} className=\"bg-white pb-6  text-center rounded-xl shadow-md\">\n                <img\n                src={group.imageUrl}\n                alt=\"Event\"\n                className=\"w-full h-fit object-cover\"\n              />\n              <strong>Group Name:</strong> {group.groupName}\n              <br />\n              <strong>Group Link:</strong> {group.groupLink}\n              <br />\n              <strong>Description:</strong> {group.groupDescription}\n              <br />\n     \n            \n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminNetworkingGroupsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
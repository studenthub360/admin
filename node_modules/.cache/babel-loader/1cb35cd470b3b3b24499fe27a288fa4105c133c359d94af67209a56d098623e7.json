{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AdminNetworkingEventsPage=()=>{const[events,setEvents]=useState([]);const[newEvent,setNewEvent]=useState({groupName:\"\",details:\"\",eventContact:\"\",date:\"\",time:\"\",image:null// Added image field\n});useEffect(()=>{// Fetch networking events data when the component mounts\nfetchNetworkingEvents();},[]);const fetchNetworkingEvents=async()=>{try{const token=sessionStorage.getItem(\"accessToken\");// Fetch networking events data from the API\nconst response=await fetch(\"https://student360-api.onrender.com/api/netevents\",{headers:{Authorization:\"\".concat(token)}});if(!response.ok){throw new Error(\"Failed to fetch networking events\");}const eventsData=await response.json();setEvents(eventsData||[]);}catch(error){console.error(\"Error fetching networking events:\",error);alert(\"Failed to fetch networking events. Please try again.\");}};const handleInputChange=e=>{const{name,value,files}=e.target;// If the input is a file (image), set the image property in the state\nif(name===\"image\"){setNewEvent(prevEvent=>({...prevEvent,[name]:files[0]}));}else{setNewEvent(prevEvent=>({...prevEvent,[name]:value}));}};const handleAddEvent=async()=>{try{const token=sessionStorage.getItem(\"accessToken\");// Create a FormData object to handle image file\nconst formData=new FormData();formData.append(\"groupName\",newEvent.groupName);formData.append(\"details\",newEvent.details);formData.append(\"eventContact\",newEvent.eventContact);formData.append(\"date\",newEvent.date);formData.append(\"time\",newEvent.time);formData.append(\"image\",newEvent.image);// Append image file\n// Send a POST request to add a new networking event\nconst response=await fetch(\"https://student360-api.onrender.com/api/netevents\",{method:\"POST\",headers:{Authorization:\"\".concat(token)},body:formData});if(!response.ok){throw new Error(\"Failed to add networking event\");}// Fetch the updated list of networking events\nfetchNetworkingEvents();}catch(error){console.error(\"Error adding networking event:\",error);alert(\"Failed to add networking event. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container w-fit  mt-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-8  text-[#3B50FE]\",children:\"Admin Networking Events Page\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"groupName\",placeholder:\"Group Name\",value:newEvent.groupName,onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"details\",placeholder:\"Details\",value:newEvent.details,onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"eventContact\",placeholder:\"Event Contact\",value:newEvent.eventContact,onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date\",value:newEvent.date,onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"time\",value:newEvent.time,onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",accept:\"image/*\",onChange:handleInputChange,className:\"p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddEvent,className:\"bg-[#3B50FE] text-white px-4 py-2 rounded-md\",children:\"Add Event\"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Networking Events List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\",children:events.map((event,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white pb-6  text-center rounded-xl shadow-md\",children:[/*#__PURE__*/_jsx(\"img\",{src:event.imageUrl,alt:\"Event\",className:\"w-full h-fit object-cover\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-2 text-[#3A4FFE]\",children:event.groupName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 p-2\",children:event.details}),/*#__PURE__*/_jsx(\"strong\",{children:\"Contact:\"}),\" \",event.eventContact,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",new Date(event.date).toLocaleDateString(),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Time:\"}),\" \",event.time,/*#__PURE__*/_jsx(\"br\",{})]},index))})]})]});};export default AdminNetworkingEventsPage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminNetworkingEventsPage","events","setEvents","newEvent","setNewEvent","groupName","details","eventContact","date","time","image","fetchNetworkingEvents","token","sessionStorage","getItem","response","fetch","headers","Authorization","concat","ok","Error","eventsData","json","error","console","alert","handleInputChange","e","name","value","files","target","prevEvent","handleAddEvent","formData","FormData","append","method","body","className","children","type","placeholder","onChange","accept","onClick","map","event","index","src","imageUrl","alt","Date","toLocaleDateString"],"sources":["/Users/mac/Documents/Coding/admin-studenthub360/src/Component/Admin/NetworkingEvents.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AdminNetworkingEventsPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [newEvent, setNewEvent] = useState({\r\n    groupName: \"\",\r\n    details: \"\",\r\n    eventContact: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    image: null, // Added image field\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch networking events data when the component mounts\r\n    fetchNetworkingEvents();\r\n  }, []);\r\n\r\n  const fetchNetworkingEvents = async () => {\r\n    try {\r\n      const token = sessionStorage.getItem(\"accessToken\");\r\n\r\n      // Fetch networking events data from the API\r\n      const response = await fetch(\r\n        \"https://student360-api.onrender.com/api/netevents\",\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch networking events\");\r\n      }\r\n\r\n      const eventsData = await response.json();\r\n      setEvents(eventsData || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching networking events:\", error);\r\n      alert(\"Failed to fetch networking events. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    // If the input is a file (image), set the image property in the state\r\n    if (name === \"image\") {\r\n      setNewEvent((prevEvent) => ({\r\n        ...prevEvent,\r\n        [name]: files[0],\r\n      }));\r\n    } else {\r\n      setNewEvent((prevEvent) => ({\r\n        ...prevEvent,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddEvent = async () => {\r\n    try {\r\n      const token = sessionStorage.getItem(\"accessToken\");\r\n\r\n      // Create a FormData object to handle image file\r\n      const formData = new FormData();\r\n      formData.append(\"groupName\", newEvent.groupName);\r\n      formData.append(\"details\", newEvent.details);\r\n      formData.append(\"eventContact\", newEvent.eventContact);\r\n      formData.append(\"date\", newEvent.date);\r\n      formData.append(\"time\", newEvent.time);\r\n      formData.append(\"image\", newEvent.image); // Append image file\r\n\r\n      // Send a POST request to add a new networking event\r\n      const response = await fetch(\r\n        \"https://student360-api.onrender.com/api/netevents\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `${token}`,\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add networking event\");\r\n      }\r\n\r\n      // Fetch the updated list of networking events\r\n      fetchNetworkingEvents();\r\n    } catch (error) {\r\n      console.error(\"Error adding networking event:\", error);\r\n      alert(\"Failed to add networking event. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container w-fit  mt-8\">\r\n      <h1 className=\"text-3xl font-bold mb-8  text-[#3B50FE]\">\r\n        Admin Networking Events Page\r\n      </h1>\r\n\r\n      <div className=\"mb-6\">\r\n        {/* <h2 className=\"text-xl font-bold mb-4\">Add New Networking Event</h2> */}\r\n        <div className=\"flex flex-col space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"groupName\"\r\n            placeholder=\"Group Name\"\r\n            value={newEvent.groupName}\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"details\"\r\n            placeholder=\"Details\"\r\n            value={newEvent.details}\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"eventContact\"\r\n            placeholder=\"Event Contact\"\r\n            value={newEvent.eventContact}\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={newEvent.date}\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={newEvent.time}\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            onChange={handleInputChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <button\r\n            onClick={handleAddEvent}\r\n            className=\"bg-[#3B50FE] text-white px-4 py-2 rounded-md\"\r\n          >\r\n            Add Event\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h2 className=\"text-xl font-bold mb-4\">Networking Events List</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n          {events.map((event, index) => (\r\n            <div\r\n              className=\"bg-white pb-6  text-center rounded-xl shadow-md\"\r\n              key={index}\r\n            >\r\n              <img\r\n                src={event.imageUrl}\r\n                alt=\"Event\"\r\n                className=\"w-full h-fit object-cover\"\r\n              />\r\n               <h3 className=\"text-xl font-semibold mb-2 text-[#3A4FFE]\">\r\n              {event.groupName}\r\n            </h3>\r\n              \r\n            <p className=\"text-gray-600 p-2\">{event.details}</p>\r\n              <strong>Contact:</strong> {event.eventContact}\r\n              <br />\r\n              <strong>Date:</strong> {new Date(event.date).toLocaleDateString()}\r\n              <br />\r\n              <strong>Time:</strong> {event.time}\r\n              <br />\r\n              \r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminNetworkingEventsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
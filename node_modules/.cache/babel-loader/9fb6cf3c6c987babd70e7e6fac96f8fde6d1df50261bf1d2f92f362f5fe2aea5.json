{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Coding/admin-studenthub360/src/Component/Admin/NetworkingEvents.jsx\",\n  _s = $RefreshSig$();\n// NetworkingEvents.js\n\nimport React, { useState } from 'react';\nimport Carousel from 'react-elastic-carousel'; // Install this package\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkingEvents = () => {\n  _s();\n  const [eventName, setEventName] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventTime, setEventTime] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventContact, setEventContact] = useState('');\n  const [eventImage, setEventImage] = useState(null); // Handle image upload\n\n  // Dummy events data (replace with actual data)\n  const dummyEvents = [{\n    id: 1,\n    name: 'Event 1',\n    date: '2024-03-15',\n    time: '10:00 AM',\n    location: 'Venue A'\n  }, {\n    id: 2,\n    name: 'Event 2',\n    date: '2024-03-16',\n    time: '2:30 PM',\n    location: 'Venue B'\n  }\n  // Add more event objects as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Networking Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Event Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"eventName\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Added Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      itemsToShow: 4,\n      children: dummyEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", event.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkingEvents, \"ITHhQ4yFYwOcgWVd9nzNB1ZV2Dc=\");\n_c = NetworkingEvents;\nexport default NetworkingEvents;\n\n/*import React, { useState } from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\n\r\nconst AddEventForm = () => {\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [eventDateTime, setEventDateTime] = useState(\"\");\r\n  const [eventLocation, setEventLocation] = useState(\"\");\r\n  const [contactInfo, setContactInfo] = useState(\"\");\r\n  const [eventImage, setEventImage] = useState(null);\r\n  const [addedEvents, setAddedEvents] = useState([]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setEventImage(file);\r\n  };\r\n\r\n  const addEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(),\r\n      name: eventName,\r\n      dateTime: eventDateTime,\r\n      location: eventLocation,\r\n      contactInfo: contactInfo,\r\n      image: eventImage,\r\n    };\r\n    setAddedEvents([...addedEvents, newEvent]);\r\n    // Reset form fields\r\n    setEventName(\"\");\r\n    setEventDateTime(\"\");\r\n    setEventLocation(\"\");\r\n    setContactInfo(\"\");\r\n    setEventImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Add Event</h1>\r\n      <form>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventName\" className=\"block font-semibold mb-1\">\r\n            Event Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventName\"\r\n            value={eventName}\r\n            onChange={(e) => setEventName(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventDateTime\" className=\"block font-semibold mb-1\">\r\n            Date and Time:\r\n          </label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"eventDateTime\"\r\n            value={eventDateTime}\r\n            onChange={(e) => setEventDateTime(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventLocation\" className=\"block font-semibold mb-1\">\r\n            Location:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventLocation\"\r\n            value={eventLocation}\r\n            onChange={(e) => setEventLocation(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"contactInfo\" className=\"block font-semibold mb-1\">\r\n            Contact Information:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contactInfo\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventImage\" className=\"block font-semibold mb-1\">\r\n            Event Image:\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"eventImage\"\r\n            onChange={handleImageChange}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={addEvent}\r\n          className=\"bg-blue-500 text-white py-2 px-4 rounded-lg\"\r\n        >\r\n         Upload Poster\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"text-3xl font-bold mb-4\">Added Events</h2>\r\n        <Carousel itemsToShow={3} pagination>\r\n          {addedEvents.map((event) => (\r\n            <div key={event.id} className=\"w-full\">\r\n              <div className=\"border rounded-lg p-4\">\r\n                {event.image && (\r\n                  <img\r\n                    src={URL.createObjectURL(event.image)}\r\n                    alt={event.name}\r\n                    className=\"w-full h-40 object-cover rounded-lg mb-4\"\r\n                  />\r\n                )}\r\n                <h3 className=\"text-xl font-semibold mb-2\">{event.name}</h3>\r\n                <p className=\"mb-2\">Date and Time: {event.dateTime}</p>\r\n                <p className=\"mb-2\">Location: {event.location}</p>\r\n                <p className=\"mb-2\">Contact Info: {event.contactInfo}</p>\r\n              </div>\r\n            </div>\r\n            \r\n          ))}\r\n           {addedEvents.map((event) => (\r\n            <div key={event.id} className=\"w-full\">\r\n              <div className=\"border rounded-lg p-4\">\r\n                {event.image && (\r\n                  <img\r\n                    src={URL.createObjectURL(event.image)}\r\n                    alt={event.name}\r\n                    className=\"w-full h-40 object-cover rounded-lg mb-4\"\r\n                  />\r\n                )}\r\n                <h3 className=\"text-xl font-semibold mb-2\">{event.name}</h3>\r\n                <p className=\"mb-2\">Date and Time: {event.dateTime}</p>\r\n                <p className=\"mb-2\">Location: {event.location}</p>\r\n                <p className=\"mb-2\">Contact Info: {event.contactInfo}</p>\r\n              </div>\r\n            </div>\r\n            \r\n          ))}\r\n        </Carousel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"NetworkingEvents\");","map":{"version":3,"names":["React","useState","Carousel","jsxDEV","_jsxDEV","NetworkingEvents","_s","eventName","setEventName","eventDate","setEventDate","eventTime","setEventTime","eventLocation","setEventLocation","eventContact","setEventContact","eventImage","setEventImage","dummyEvents","id","name","date","time","location","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","itemsToShow","map","event","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Coding/admin-studenthub360/src/Component/Admin/NetworkingEvents.jsx"],"sourcesContent":["\r\n// NetworkingEvents.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Carousel from 'react-elastic-carousel'; // Install this package\r\n\r\nconst NetworkingEvents = () => {\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDate, setEventDate] = useState('');\r\n  const [eventTime, setEventTime] = useState('');\r\n  const [eventLocation, setEventLocation] = useState('');\r\n  const [eventContact, setEventContact] = useState('');\r\n  const [eventImage, setEventImage] = useState(null); // Handle image upload\r\n\r\n  // Dummy events data (replace with actual data)\r\n  const dummyEvents = [\r\n    { id: 1, name: 'Event 1', date: '2024-03-15', time: '10:00 AM', location: 'Venue A' },\r\n    { id: 2, name: 'Event 2', date: '2024-03-16', time: '2:30 PM', location: 'Venue B' },\r\n    // Add more event objects as needed\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Networking Events</h2>\r\n      <form>\r\n        <label htmlFor=\"eventName\">Event Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"eventName\"\r\n          value={eventName}\r\n          onChange={(e) => setEventName(e.target.value)}\r\n        />\r\n        {/* Add other form fields (date, time, location, contact, image upload) */}\r\n        {/* Implement image upload logic */}\r\n      </form>\r\n\r\n      <h3>Added Events</h3>\r\n      <Carousel itemsToShow={4}>\r\n        {dummyEvents.map((event) => (\r\n          <div key={event.id}>\r\n            <h4>{event.name}</h4>\r\n            <p>Date: {event.date}</p>\r\n            <p>Time: {event.time}</p>\r\n            <p>Location: {event.location}</p>\r\n          </div>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetworkingEvents;\r\n\r\n/*import React, { useState } from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\n\r\nconst AddEventForm = () => {\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [eventDateTime, setEventDateTime] = useState(\"\");\r\n  const [eventLocation, setEventLocation] = useState(\"\");\r\n  const [contactInfo, setContactInfo] = useState(\"\");\r\n  const [eventImage, setEventImage] = useState(null);\r\n  const [addedEvents, setAddedEvents] = useState([]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setEventImage(file);\r\n  };\r\n\r\n  const addEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(),\r\n      name: eventName,\r\n      dateTime: eventDateTime,\r\n      location: eventLocation,\r\n      contactInfo: contactInfo,\r\n      image: eventImage,\r\n    };\r\n    setAddedEvents([...addedEvents, newEvent]);\r\n    // Reset form fields\r\n    setEventName(\"\");\r\n    setEventDateTime(\"\");\r\n    setEventLocation(\"\");\r\n    setContactInfo(\"\");\r\n    setEventImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Add Event</h1>\r\n      <form>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventName\" className=\"block font-semibold mb-1\">\r\n            Event Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventName\"\r\n            value={eventName}\r\n            onChange={(e) => setEventName(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventDateTime\" className=\"block font-semibold mb-1\">\r\n            Date and Time:\r\n          </label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"eventDateTime\"\r\n            value={eventDateTime}\r\n            onChange={(e) => setEventDateTime(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventLocation\" className=\"block font-semibold mb-1\">\r\n            Location:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"eventLocation\"\r\n            value={eventLocation}\r\n            onChange={(e) => setEventLocation(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"contactInfo\" className=\"block font-semibold mb-1\">\r\n            Contact Information:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contactInfo\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"eventImage\" className=\"block font-semibold mb-1\">\r\n            Event Image:\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"eventImage\"\r\n            onChange={handleImageChange}\r\n            className=\"border border-gray-300 rounded-lg p-2 w-full\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={addEvent}\r\n          className=\"bg-blue-500 text-white py-2 px-4 rounded-lg\"\r\n        >\r\n         Upload Poster\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"text-3xl font-bold mb-4\">Added Events</h2>\r\n        <Carousel itemsToShow={3} pagination>\r\n          {addedEvents.map((event) => (\r\n            <div key={event.id} className=\"w-full\">\r\n              <div className=\"border rounded-lg p-4\">\r\n                {event.image && (\r\n                  <img\r\n                    src={URL.createObjectURL(event.image)}\r\n                    alt={event.name}\r\n                    className=\"w-full h-40 object-cover rounded-lg mb-4\"\r\n                  />\r\n                )}\r\n                <h3 className=\"text-xl font-semibold mb-2\">{event.name}</h3>\r\n                <p className=\"mb-2\">Date and Time: {event.dateTime}</p>\r\n                <p className=\"mb-2\">Location: {event.location}</p>\r\n                <p className=\"mb-2\">Contact Info: {event.contactInfo}</p>\r\n              </div>\r\n            </div>\r\n            \r\n          ))}\r\n           {addedEvents.map((event) => (\r\n            <div key={event.id} className=\"w-full\">\r\n              <div className=\"border rounded-lg p-4\">\r\n                {event.image && (\r\n                  <img\r\n                    src={URL.createObjectURL(event.image)}\r\n                    alt={event.name}\r\n                    className=\"w-full h-40 object-cover rounded-lg mb-4\"\r\n                  />\r\n                )}\r\n                <h3 className=\"text-xl font-semibold mb-2\">{event.name}</h3>\r\n                <p className=\"mb-2\">Date and Time: {event.dateTime}</p>\r\n                <p className=\"mb-2\">Location: {event.location}</p>\r\n                <p className=\"mb-2\">Contact Info: {event.contactInfo}</p>\r\n              </div>\r\n            </div>\r\n            \r\n          ))}\r\n        </Carousel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}